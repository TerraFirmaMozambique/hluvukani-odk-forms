/* this SQL handels all of the routines for the data collected by Form Hluvukani C Registrar Parcelas which is consolidated in the excel sheet Hluvukani_C_V1 
	an embeded VBA code produces five CSV files 
	Hluvukani_C_parcelas
	Hluvukani_C_titulars
	Hluvukani_C_novas_pessoas
	Hluvukani_C_testemunhas
	Hluvukani_C_pontos
	for uploading to the database host=tfmoz.ddns.net dbname=hluvukani port=5432
	*/ 



/* This < SECTION > updates Hluvukani_C_parcelas */ 

CREATE TABLE public.update_form_c_parcelas
(
    geom geometry(Point,0),
    subdate timestamp without time zone,
    start timestamp without time zone,
    myformname character varying COLLATE pg_catalog."default",
    intronote character varying COLLATE pg_catalog."default",
    tecnome character varying COLLATE pg_catalog."default",
    data date,
    regionid character varying COLLATE pg_catalog."default",
    blocoid character varying COLLATE pg_catalog."default",
    parcelid integer,
    ocup character varying COLLATE pg_catalog."default",
    ocupoutro character varying COLLATE pg_catalog."default",
    zexcl character varying COLLATE pg_catalog."default",
    partexcl character varying COLLATE pg_catalog."default",
    tipoexcl character varying COLLATE pg_catalog."default",
    conf character varying COLLATE pg_catalog."default",
    tipoconf character varying COLLATE pg_catalog."default",
    descconf character varying COLLATE pg_catalog."default",
    usecat character varying COLLATE pg_catalog."default",
    usetipo character varying COLLATE pg_catalog."default",
    useprin character varying COLLATE pg_catalog."default",
    useother character varying COLLATE pg_catalog."default",
    partytype character varying COLLATE pg_catalog."default",
    repmenor character varying COLLATE pg_catalog."default",
    addpartynumber integer,
    titularescount integer,
    titulares character varying COLLATE pg_catalog."default",
    regpartyyn character varying COLLATE pg_catalog."default",
    regnewpartynumber character varying COLLATE pg_catalog."default",
    novaspessoascount integer,
    novaspessoas character varying COLLATE pg_catalog."default",
    testemnum integer,
    testemunhas_count integer,
    testemunhas character varying COLLATE pg_catalog."default",
    latitude double precision,
    longitude double precision,
    altitude double precision,
    accuracy double precision,
    limitesyn character varying COLLATE pg_catalog."default",
    pontos character varying COLLATE pg_catalog."default",
    endnote character varying COLLATE pg_catalog."default",
    reciboimage character varying COLLATE pg_catalog."default",
    finish timestamp without time zone,
    inst_id character varying COLLATE pg_catalog."default",
    inst_name character varying COLLATE pg_catalog."default",
    key character varying COLLATE pg_catalog."default" NOT NULL
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.update_form_c_parcelas  OWNER to postgres;


COPY public.update_form_c_parcelas FROM '/var/lib/share/projects/illovo/dbupdate/Hluvukani_C_parcelas.csv'  USING DELIMITERS ',' WITH NULL AS '' CSV HEADER ENCODING 'latin1';



DELETE FROM public.update_form_c_parcelas a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_form_c_parcelas b
                 WHERE  a.key = b.key);
				 

DELETE from public.update_form_c_parcelas
WHERE EXISTS (SELECT 1 FROM public.form_c_parcelas
WHERE key = public.update_form_c_parcelas.key );


UPDATE public.update_form_c_parcelas 
SET reciboimage = '<img src="'||reciboimage||'" style="width:256px;height:256px;">';


SELECT UpdateGeometrySRID('form_c_parcelas','geom',0);

INSERT INTO public.form_c_parcelas(
            geom, subdate, start, myformname, intronote, tecnome, data, regionid, blocoid, parcelid, ocup, ocupoutro, zexcl, partexcl, tipoexcl, conf, tipoconf, descconf, usecat, usetipo, useprin, useother,partytype, repmenor, addpartynumber, titularescount, titulares,regpartyyn, regnewpartynumber, novaspessoascount, novaspessoas,testemnum, testemunhas_count, testemunhas, latitude, longitude,altitude, accuracy, limitesyn, pontos, endnote, reciboimage,finish, inst_id, inst_name, key)
SELECT geom, subdate, start, myformname, intronote, tecnome, data, regionid,blocoid, parcelid, ocup, ocupoutro, zexcl, partexcl, tipoexcl, 
       conf, tipoconf, descconf, usecat, usetipo, useprin, useother, 
       partytype, repmenor, addpartynumber, titularescount, titulares, 
       regpartyyn, regnewpartynumber, novaspessoascount, novaspessoas, 
       testemnum, testemunhas_count, testemunhas, latitude, longitude, 
       altitude, accuracy, limitesyn, pontos, endnote, reciboimage, 
       finish, inst_id, inst_name, key
FROM public.update_form_c_parcelas;

SELECT UpdateGeometrySRID('form_c_parcelas','geom',4326);


DROP TABLE public.update_form_c_parcelas;

/* This < SECTION > updates Hluvukani_C_titulars */  

CREATE TABLE public.update_form_c_titulares
(
  parentuid character varying NOT NULL,
  searchtext character varying,
  foundparty character varying
  
)
WITH (
  OIDS=TRUE
);
ALTER TABLE public.update_form_c_titulares OWNER TO postgres;
GRANT ALL ON TABLE public.update_form_c_titulares TO postgres;

COPY public.update_form_c_titulares FROM '/var/lib/share/projects/illovo/dbupdate/Hluvukani_C_titulars.csv'  USING DELIMITERS ',' WITH NULL AS '' CSV HEADER ENCODING 'latin1';

-- this removes all new parties and ensures only those parties already in the database are added to the database table and removes those added through late claims.

DELETE FROM public.update_form_c_titulares 
WHERE foundparty = '1';

-- Create a unique reference colum 
ALTER TABLE public.update_form_c_titulares ADD COLUMN titulares character varying;

-- populate the column 
UPDATE public.update_form_c_titulares 
SET titulares = concat ("parentuid","searchtext","foundparty");

-- delete duplicates in update_form_c_titulares this reduces duplicate to one occurance
DELETE FROM public.update_form_c_titulares a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_form_c_titulares b
                 WHERE  a.titulares = b.titulares);

-- delete from update_form_c_titulares data already parsed into dbase
DELETE FROM public.update_form_c_titulares
WHERE EXISTS (SELECT 1 FROM public.form_c_titulares 
WHERE titulares = public.update_form_c_titulares.titulares);

-- cleaned data entered into the main table
INSERT INTO public.form_c_titulares(parentuid, searchtext, foundparty, titulares)
SELECT parentuid, searchtext, foundparty, titulares
FROM public.update_form_c_titulares;

/* ensure there is only one occurance for each person to party_id (need to be aware of multiple registrations of a person at this. The phase proof of life form will be used to add a party to titulares parsing out duplicate entries however those that haven't gone through the POL phase has slipped through  )*/

DELETE FROM public.form_c_titulares a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.form_c_titulares b
                 WHERE  a.titulares = b.titulares);
				 

				 
DROP TABLE public.update_form_c_titulares;

---- Clean out public.pol_vfront rejeitado

CREATE TABLE public.update_form_c_pessoas_rejeitado AS SELECT  pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, pessoa_prof, pessoa_prof_other, pessoa_nacion, pessoa_natural, nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, pessoa_id, doc_local, doc_emi, doc_val, doc_vital, pessoa_foto, id_foto, pessoa_assin, contacto, party_name, confirmado
  FROM public.pol_vfront
  WHERE confirmado = 'rejeitado';
  
ALTER TABLE public.update_form_c_pessoas_rejeitado OWNER TO postgres;
GRANT ALL ON TABLE public.update_form_c_pessoas_rejeitado TO postgres;

DELETE FROM public.update_form_c_pessoas_rejeitado a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_form_c_pessoas_rejeitado b
                 WHERE  a.party_name = b.party_name);
				 
DELETE from public.update_form_c_pessoas_rejeitado
WHERE EXISTS (SELECT 1 FROM public.form_c_pessoas_rejeitado
WHERE party_name = public.update_form_c_pessoas_rejeitado.party_name);

INSERT INTO public.form_c_pessoas_rejeitado(pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, pessoa_prof, pessoa_prof_other, pessoa_nacion, pessoa_natural, nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, pessoa_id, doc_local, doc_emi, doc_val, doc_vital, pessoa_foto, id_foto, pessoa_assin, contacto, party_name, confirmado)
SELECT  pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, pessoa_prof, pessoa_prof_other, pessoa_nacion, pessoa_natural, nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, pessoa_id, doc_local, doc_emi, doc_val, doc_vital, pessoa_foto, id_foto, pessoa_assin, contacto, party_name, confirmado
FROM public.update_form_c_pessoas_rejeitado;

DROP TABLE public.update_form_c_pessoas_rejeitado;

--Clean out public.pol_vfront sim

CREATE TABLE public.update_form_b_pessoas
(
  sub_date timestamp without time zone,
  start timestamp without time zone,
  form_name character varying,
  intronote character varying,
  tec_nome character varying,
  data date,
  region_id character varying,
  bloco_id character varying,
  pessoa_app character varying,
  pessoa_nom character varying,
  pessoa_gen character varying,
  pessoa_civil character varying,
  pessoa_prof character varying,
  pessoa_prof_other character varying,
  pessoa_nacion character varying,
  pessoa_natural character varying,
  nasc_y_n character varying,
  pessoa_nasc date,
  pessoa_ida character varying,
  pessoa_doc character varying,
  pessoa_id character varying,
  doc_local character varying,
  doc_emi date,
  doc_val date,
  doc_vital character varying,
  pessoa_foto character varying,
  id_foto character varying,
  pessoa_assin character varying,
  contacto integer,
  finish date,
  meta_id character varying,
  meta_name character varying,
  key character varying,
  party_name character varying
)
WITH (
  OIDS=TRUE
);
ALTER TABLE public.update_form_b_pessoas OWNER TO postgres;
GRANT ALL ON TABLE public.update_form_b_pessoas TO postgres;
  
  INSERT INTO public.update_form_b_pessoas(
            sub_date, start, form_name, intronote, tec_nome, data, region_id, 
            bloco_id, pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, pessoa_prof, 
            pessoa_prof_other, pessoa_nacion, pessoa_natural, nasc_y_n, pessoa_nasc, 
            pessoa_ida, pessoa_doc, pessoa_id, doc_local, doc_emi, doc_val, 
            doc_vital, pessoa_foto, id_foto, pessoa_assin, contacto, finish, 
            meta_id, meta_name, key, party_name)
SELECT 
  form_c_parcelas.subdate, form_c_parcelas.start, form_c_parcelas.myformname, form_c_parcelas.intronote, form_c_parcelas.tecnome, 
  form_c_parcelas.data, form_c_parcelas.regionid, form_c_parcelas.blocoid, 
  pol_vfront.pessoa_app, pol_vfront.pessoa_nom, pol_vfront.pessoa_gen, pol_vfront.pessoa_civil, pol_vfront.pessoa_prof, pol_vfront.pessoa_prof_other, 
  pol_vfront.pessoa_nacion, pol_vfront.pessoa_natural, pol_vfront.nasc_y_n, pol_vfront.pessoa_nasc, pol_vfront.pessoa_ida, pol_vfront.pessoa_doc, pol_vfront.pessoa_id, pol_vfront.doc_local, pol_vfront.doc_emi, pol_vfront.doc_val, pol_vfront.doc_vital, pol_vfront.pessoa_foto, pol_vfront.id_foto, pol_vfront.pessoa_assin, pol_vfront.contacto, form_c_parcelas.finish, form_c_parcelas.inst_id, form_c_parcelas.inst_name, form_c_parcelas.key, pol_vfront.party_name
FROM 
  public.pol_vfront, 
  public.update_novas_pessoas, 
  public.form_c_parcelas
WHERE 
  update_novas_pessoas.party_name = pol_vfront.party_name AND
  update_novas_pessoas.parent_uid = form_c_parcelas.key AND
  pol_vfront.confirmado = 'sim';

  
  DELETE FROM public.update_form_b_pessoas a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_form_b_pessoas b
                 WHERE  a.party_name = b.party_name);
				 
-- delete anything in update_novas_pessoas that is in rejected
DELETE FROM public.update_form_b_pessoas
WHERE EXISTS (SELECT 1 FROM public.form_b_pessoas 
WHERE party_name = public.update_form_b_pessoas.party_name);

INSERT INTO public.form_b_pessoas(
            sub_date, start, form_name, intronote, tec_nome, 
            data, region_id, bloco_id, pessoa_app, pessoa_nom, pessoa_gen, 
            pessoa_civil, pessoa_prof, pessoa_prof_other, pessoa_nacion, 
            pessoa_natural, nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, 
            pessoa_id, doc_local, doc_emi, doc_val, doc_vital, pessoa_foto, 
            id_foto, pessoa_assin, contacto, finish, meta_id, meta_name, 
            key, party_name)
SELECT sub_date, start, form_name, intronote, tec_nome, data, region_id, 
       bloco_id, pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, pessoa_prof, 
       pessoa_prof_other, pessoa_nacion, pessoa_natural, nasc_y_n, pessoa_nasc, 
       pessoa_ida, pessoa_doc, pessoa_id, doc_local, doc_emi, doc_val, 
       doc_vital, pessoa_foto, id_foto, pessoa_assin, contacto, finish, 
       meta_id, meta_name, key, party_name
  FROM public.update_form_b_pessoas;

UPDATE public.form_b_pessoas SET id_party = 'party'||id; 

UPDATE public.form_b_pessoas SET party_name_key = concat (key)||(pessoa_nom)||(pessoa_app)||(pessoa_doc)||(pessoa_id);

DROP TABLE public.update_form_b_pessoas;

------- 2 UNP

DROP TABLE public.update_novas_pessoas;

CREATE TABLE public.update_novas_pessoas
(
id serial,
parent_uid character varying,
pessoa_app character varying,
pessoa_nom character varying,
pessoa_gen character varying,
pessoa_civil character varying,
pessoa_prof character varying,
pessoa_prof_other character varying,
pessoa_nacion character varying,
pessoa_natural character varying,
nasc_y_n character varying,
pessoa_nasc date,
pessoa_ida character varying,
pessoa_doc character varying,
pessoa_id character varying,
doc_local character varying,
doc_emi date,
doc_val date,
doc_vital character varying,
pessoa_foto character varying,
id_foto character varying,
pessoa_assin character varying,
contacto integer,
party_name character varying,
party_name_key character varying,
confirmado character varying NOT NULL DEFAULT 'não confirmado'::character varying,
parcel_id integer
)
WITH (
    OIDS = TRUE
);

ALTER TABLE public.update_novas_pessoas  OWNER to postgres;
GRANT ALL ON TABLE public.update_novas_pessoas TO postgres;

ALTER TABLE public.update_novas_pessoas ADD CONSTRAINT pkey_update_novas_pessoas PRIMARY KEY (id);

-- upload the ODK output
COPY public.update_novas_pessoas FROM '/var/lib/share/projects/illovo/dbupdate/Hluvukani_C_novas_pessoas.csv'  USING DELIMITERS ',' WITH NULL AS '' CSV HEADER ENCODING 'latin1';

UPDATE public.update_novas_pessoas SET party_name = concat((pessoa_nom)||(pessoa_app)||(pessoa_doc)||(pessoa_id));

UPDATE public.update_novas_pessoas SET party_name_key = concat((parent_uid)||(pessoa_nom)||(pessoa_app)||(pessoa_doc)||(pessoa_id));


DELETE FROM update_novas_pessoas 
WHERE party_name IN (SELECT  update_novas_pessoas.party_name 
FROM update_novas_pessoas,form_c_pessoas_rejeitado
WHERE public.update_novas_pessoas.party_name = public.form_c_pessoas_rejeitado.party_name);

DELETE FROM update_novas_pessoas 
WHERE party_name IN (SELECT update_novas_pessoas.party_name 
FROM update_novas_pessoas,
form_b_pessoas
WHERE public.update_novas_pessoas.party_name = public.form_b_pessoas.party_name);


DELETE FROM public.update_novas_pessoas a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_novas_pessoas b
                 WHERE  a.party_name_key = b.party_name_key);

UPDATE public.update_novas_pessoas 
SET pessoa_foto = '<img src="'||pessoa_foto||'" style="width:256px;height:256px;">',
id_foto = '<img src="'||id_foto||'" style="width:256px;height:256px;">',
pessoa_assin = '<img src="'||pessoa_assin||'" style="width:256px;height:256px;">';

CREATE TABLE public.update_pol_vfront AS SELECT
  update_novas_pessoas.confirmado, 
  update_novas_pessoas.pessoa_app, 
  update_novas_pessoas.pessoa_nom, 
  update_novas_pessoas.pessoa_gen, 
  update_novas_pessoas.pessoa_civil, 
  update_novas_pessoas.pessoa_prof, 
  update_novas_pessoas.pessoa_prof_other, 
  update_novas_pessoas.pessoa_nacion, 
  update_novas_pessoas.pessoa_natural, 
  update_novas_pessoas.nasc_y_n, 
  update_novas_pessoas.pessoa_nasc, 
  update_novas_pessoas.pessoa_ida, 
  update_novas_pessoas.pessoa_doc, 
  update_novas_pessoas.pessoa_id, 
  update_novas_pessoas.doc_local, 
  update_novas_pessoas.doc_emi, 
  update_novas_pessoas.doc_val, 
  update_novas_pessoas.doc_vital, 
  update_novas_pessoas.pessoa_foto, 
  update_novas_pessoas.id_foto, 
  update_novas_pessoas.pessoa_assin, 
  update_novas_pessoas.contacto, 
  update_novas_pessoas.party_name
FROM 
  public.update_novas_pessoas;

ALTER TABLE public.update_pol_vfront OWNER TO postgres;
GRANT ALL ON TABLE public.update_pol_vfront TO postgres;

DELETE FROM public.update_pol_vfront a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_pol_vfront b
                 WHERE  a.party_name = b.party_name);
				 
DELETE from public.update_pol_vfront
WHERE EXISTS (SELECT 1 FROM public.pol_vfront
WHERE party_name = public.update_pol_vfront.party_name);			

DELETE from public.update_pol_vfront
WHERE EXISTS (SELECT 1 FROM public.form_b_pessoas
WHERE party_name = public.update_pol_vfront.party_name);	 

ALTER TABLE public.update_pol_vfront ADD CONSTRAINT update_pkey_pol_vfront PRIMARY KEY (party_name);

INSERT INTO public.pol_vfront(
            confirmado, pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, 
            pessoa_prof, pessoa_prof_other, pessoa_nacion, pessoa_natural, 
            nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, pessoa_id, doc_local, 
            doc_emi, doc_val, doc_vital, pessoa_foto, id_foto, pessoa_assin, 
            contacto, party_name)
SELECT confirmado, pessoa_app, pessoa_nom, pessoa_gen, pessoa_civil, 
            pessoa_prof, pessoa_prof_other, pessoa_nacion, pessoa_natural, 
            nasc_y_n, pessoa_nasc, pessoa_ida, pessoa_doc, pessoa_id, doc_local, 
            doc_emi, doc_val, doc_vital, pessoa_foto, id_foto, pessoa_assin, 
            contacto, party_name
FROM public.update_pol_vfront;

DROP TABLE public.update_pol_vfront;

CREATE TABLE public.update_parcel_association AS
SELECT
form_c_parcelas.parcelid, 
form_b_pessoas.id_party, 
form_c_parcelas.key AS ckey,
form_b_pessoas.pessoa_nom|| form_b_pessoas.pessoa_app||form_b_pessoas.pessoa_doc||form_b_pessoas.pessoa_id AS key
FROM 
  public.form_c_parcelas, 
  public.form_c_titulares, 
  public.form_b_pessoas
WHERE 
  form_c_parcelas.key = form_c_titulares.parentuid AND
  form_c_titulares.foundparty = form_b_pessoas.id_party;

ALTER TABLE public.update_parcel_association OWNER TO postgres;
GRANT ALL ON TABLE public.update_parcel_association TO postgres;

ALTER TABLE "update_parcel_association" SET WITH OIDS;

ALTER TABLE public.update_parcel_association ADD COLUMN role character varying;

UPDATE public.update_parcel_association SET role = 'landholder';

DELETE FROM public.update_parcel_association a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_parcel_association b
                 WHERE  a.key = b.key);
				 

-- delete occurances we already have

DELETE from public.update_parcel_association
WHERE EXISTS (SELECT 1 FROM public.parcel_association
WHERE key = public.update_parcel_association.key);

INSERT INTO public.parcel_association(parcelid, id_party, ckey, key, role)
SELECT parcelid, id_party, ckey, key, role
FROM public.update_parcel_association;

DROP TABLE public.update_parcel_association;



CREATE TABLE public.update_parcel_association AS
  SELECT 
  form_c_parcelas.parcelid, 
  form_b_pessoas.id_party, 
  form_b_pessoas.key, 
  update_novas_pessoas.party_name
FROM 
  public.form_c_parcelas, 
  public.form_b_pessoas, 
  public.update_novas_pessoas
WHERE 
  form_b_pessoas.party_name = update_novas_pessoas.party_name AND
  form_b_pessoas.key = form_c_parcelas.key;
  
  
ALTER TABLE public.update_parcel_association OWNER TO postgres;
GRANT ALL ON TABLE public.update_parcel_association TO postgres;

ALTER TABLE "update_parcel_association" SET WITH OIDS;

ALTER TABLE public.update_parcel_association ADD COLUMN role character varying;

UPDATE public.update_parcel_association SET role = 'landholder';

ALTER TABLE public.update_parcel_association ADD COLUMN party_name_key character varying;

UPDATE public.update_parcel_association SET party_name_key = concat(key,party_name);

DELETE FROM public.update_parcel_association a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_parcel_association b 
WHERE  a.party_name_key = b.party_name_key);

INSERT INTO public.parcel_association(parcelid, id_party, ckey, key, role)
SELECT parcelid, id_party, key, party_name, role
FROM public.update_parcel_association;

DROP TABLE public.update_parcel_association;
 

-- produce updated regional lists for form_C which would update the lists produced from form_b  
Copy (select bloco_id AS bloco_id_key, id_party AS party_id_key, party_name FROM public.form_b_pessoas where region_id = 'Central') TO '/var/lib/share/projects/illovo/ODK Forms/hluvukani-odk-forms/Hluvukani_C_registrar_parcelas/Hluvukani_C_registrar_parcelas-media/Central.csv' DELIMITER ',' NULL AS '' CSV HEADER ENCODING 'latin1';

Copy (select bloco_id AS bloco_id_key, id_party AS party_id_key, party_name FROM public.form_b_pessoas where region_id = 'Norte') TO '/var/lib/share/projects/illovo/ODK Forms/hluvukani-odk-forms/Hluvukani_C_registrar_parcelas/Hluvukani_C_registrar_parcelas-media/Norte.csv' DELIMITER ',' NULL AS '' CSV HEADER ENCODING 'latin1';

Copy (select bloco_id AS bloco_id_key, id_party AS party_id_key, party_name FROM public.form_b_pessoas where region_id = 'Sul') TO '/var/lib/share/projects/illovo/ODK Forms/hluvukani-odk-forms/Hluvukani_C_registrar_parcelas/Hluvukani_C_registrar_parcelas-media/Sul.csv' DELIMITER ',' NULL AS '' CSV HEADER ENCODING 'latin1';

/* the association with parcels is through the parent_uid from form_c_(parcelas) oobase query joins parcels_hluvukani to form_c_parcelas through upn-parcelid and joins form_c_parcelas to form_c_titulars via parentuid-parentuid which links the part */



-- after we have updated the table we rebuild the update_novas_pessoas table taking out the authenticated pessoas..



CREATE TABLE public.update_form_c_tetsemunhas
(
  parentuid character varying NOT NULL,
  testemnome character varying,
  testemtype character varying,
  testemassin character varying
  
)
WITH (
  OIDS=TRUE
);
ALTER TABLE public.update_form_c_tetsemunhas
  OWNER TO postgres;
GRANT ALL ON TABLE public.update_form_c_tetsemunhas TO postgres;
GRANT ALL ON TABLE public.update_form_c_tetsemunhas TO public;

COPY public.update_form_c_tetsemunhas FROM '/var/lib/share/projects/illovo/dbupdate/Hluvukani_C_testemunhas.csv'  USING DELIMITERS ',' WITH NULL AS '' CSV HEADER ENCODING 'latin1';

ALTER TABLE public.update_form_c_tetsemunhas ADD COLUMN testemkey character varying;

UPDATE public.update_form_c_tetsemunhas 
SET testemkey = (parentuid)||(testemnome)||(testemtype);

DELETE FROM public.update_form_c_tetsemunhas a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.form_c_tetsemunhas b
                 WHERE  a.testemkey = b.testemkey);
				 
DELETE from public.update_form_c_tetsemunhas
WHERE EXISTS (SELECT 1 FROM public.form_c_tetsemunhas
WHERE testemkey = public.update_form_c_tetsemunhas.testemkey );				 
				 
				 
UPDATE public.update_form_c_tetsemunhas 
SET testemassin = '<img src="'||testemassin||'" style="width:256px;height:256px;">';

INSERT INTO public.form_c_tetsemunhas (parentuid, testemnome, testemtype, testemassin, testemkey )
SELECT parentuid, testemnome, testemtype, testemassin, testemkey
FROM public.update_form_c_tetsemunhas;



DROP TABLE public.update_form_c_tetsemunhas;

CREATE TABLE public.update_form_c_pontos
(
    
    geom geometry(Point, 0),
    latitude double precision,
    longitude double precision,
    altitude double precision,
    accuracy double precision,
    upngpslimit character varying COLLATE pg_catalog."default",
	parentuid character varying COLLATE pg_catalog."default" NOT NULL,
    key character varying COLLATE pg_catalog."default"
    )
    WITH ( OIDS=FALSE );
	
	GRANT ALL ON TABLE public.update_form_c_pontos TO postgres;
	
	COPY public.update_form_c_pontos FROM '/var/lib/share/projects/illovo/dbupdate/Hluvukani_C_pontos.csv'  USING DELIMITERS ',' WITH NULL AS '' CSV HEADER;
	
	DELETE FROM public.update_form_c_pontos a
WHERE a.ctid <> (SELECT min(b.ctid)
                 FROM   public.update_form_c_pontos b
                 WHERE  a.key = b.key);
	
	DELETE FROM public.update_form_c_pontos
WHERE EXISTS (SELECT 1 FROM public.form_c_pontos 
WHERE key = public.update_form_c_pontos.key );


SELECT UpdateGeometrySRID('form_c_pontos','geom',0);

INSERT INTO public.form_c_pontos ( geom, latitude, longitude, altitude, accuracy, upngpslimit, parentuid, key)
SELECT  geom, latitude, longitude, altitude, accuracy, upngpslimit, parentuid, key
FROM public.update_form_c_pontos;

SELECT UpdateGeometrySRID('form_c_pontos','geom',4326);

DROP TABLE public.update_form_c_pontos;